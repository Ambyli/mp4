1.) This is an example of duplicated code. This illustrates duplicated expressions in the same class. One way to refactor would be to eliminate one of the methods as they do exactly the same thingand make another function that is passed parameters.  The program tries to add the plugin to the map twice. By creating an additional method that is passed parameters, the same code canexecute two different processes but have two different results.
2.) Committed changes to github
3.) This code smell was an example of duplicate code. Before combining the two methods, the Node class was long.This would make the code smell an example of large class code smell.  This could be refactored by moving the method into the Jenkins.Model.Jenkins class.  We would then need to rewrite the method calls inside of the Jenkins Class.
4.) This method can be easily refactored.  Putting these statements into its own method would simplify these statements.  Using a while loop inside this method would allow the code to process each statement.  Incrementing "i" and limiting the process so  "i" is less than 5 inside the while loop would allow the loop to advance and process the statement again 4 times.
**Still need to complete the test!
5.) This change of code found using the provided pmd file also expressed a duplicate code smell. What was done to refactor was extracting a separate method for the expression so that in the two instances it could be replaced with the new method. The file that was edited for the changes was the ~/cs498/mp4/mp4/jenkins/core/src/test/java/hudson/scheduler/CronTabTest.java.
